class ScrollEvent {
    constructor() {
        this.hasReachedMaxPower = false;
        this.hash = 0;
        this.power = 0;
        this.timer = null;
        this.newEvent = false;
        this.scrollControlFrequency = 100;
    }
    setId() {
        this.hash = Date.now();
    }
    resetId() {
        this.hash = 0;
    }
}
export class WheelScrollEvent extends ScrollEvent {
    isMaxPower(event, scrollState) {
        let currentEventPower = 0;
        if (scrollState.YDirection !== 'stationary') {
            currentEventPower = Math.abs(event.deltaY);
        }
        else if (scrollState.XDirection !== 'stationary') {
            currentEventPower = Math.abs(event.deltaX);
        }
        if (!this.hasReachedMaxPower && currentEventPower < this.power) {
            this.hasReachedMaxPower = true;
        }
        else if (this.hasReachedMaxPower && currentEventPower > this.power) {
            this.newEvent = true;
        }
        this.power = currentEventPower;
    }
    controlOngoingEvent(event, scrollState) {
        this.isMaxPower(event, scrollState);
        if (this.newEvent || this.hash === 0) {
            this.hash = Date.now();
            this.hasReachedMaxPower = false;
            this.newEvent = false;
        }
        if (this.timer)
            clearTimeout(this.timer);
        this.timer = setTimeout(() => {
            if (this.hasReachedMaxPower) {
                this.hasReachedMaxPower = false;
                this.power = 0;
                this.hash = 0;
            }
        }, this.scrollControlFrequency);
    }
    get id() {
        return this.hash || 0;
    }
}
export class TouchScrollEvent extends ScrollEvent {
    controlOngoingEvent() {
        if (this.hash === 0) {
            this.setId();
        }
        if (this.timer)
            clearTimeout(this.timer);
        this.timer = setTimeout(() => {
            this.hash = 0;
        }, this.scrollControlFrequency);
    }
    get id() {
        return this.hash || 0;
    }
}
export default ScrollEvent;
