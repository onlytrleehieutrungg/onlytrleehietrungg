{"ast":null,"code":"var _jsxFileName = \"/Users/trungtran/Documents/GitHub/portfolio/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"./App.css\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App({}) {\n  _s();\n  const screen1 = useFullScreenHandle();\n  const screen2 = useFullScreenHandle();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: screen1.enter,\n      children: \"First\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: screen2.enter,\n      children: \"Second\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullScreen, {\n      handle: screen1,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-screenable-node\",\n        style: {\n          background: \"red\"\n        },\n        children: [\"First\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: screen2.enter,\n          children: \"Switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: screen1.exit,\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FullScreen, {\n      handle: screen2,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"full-screenable-node\",\n        style: {\n          background: \"green\"\n        },\n        children: [\"Second\", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: screen1.enter,\n          children: \"Switch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: screen2.exit,\n          children: \"Exit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"NVBdK0OyDkLuFdihiKL2JjLtbnI=\", false, function () {\n  return [useFullScreenHandle, useFullScreenHandle];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","FullScreen","useFullScreenHandle","jsxDEV","_jsxDEV","App","_s","screen1","screen2","children","onClick","enter","fileName","_jsxFileName","lineNumber","columnNumber","handle","className","style","background","exit","_c","$RefreshReg$"],"sources":["/Users/trungtran/Documents/GitHub/portfolio/src/App.tsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport ProductPage from \"./pages/product\";\nimport Portfolio from \"./pages/portfolio/portfolio\";\nimport { FullScreen, useFullScreenHandle } from \"react-full-screen\";\ninterface FullScreenHandle {\n  active: boolean;\n  // Specifies if attached element is currently full screen.\n\n  enter: () => Promise<void>;\n  // Requests this element to go full screen.\n\n  exit: () => Promise<void>;\n  // Requests this element to exit full screen.\n\n  node: React.MutableRefObject<HTMLDivElement | null>;\n  // The attached DOM node\n}\ninterface FullScreenHandle {\n  active: boolean;\n  // Specifies if attached element is currently full screen.\n\n  enter: () => Promise<void>;\n  // Requests this element to go full screen.\n\n  exit: () => Promise<void>;\n  // Requests this element to exit full screen.\n\n  node: React.MutableRefObject<HTMLDivElement | null>;\n  // The attached DOM node\n}\nfunction App({}) {\n  const screen1 = useFullScreenHandle();\n  const screen2 = useFullScreenHandle();\n\n  return (\n    <div>\n      <button onClick={screen1.enter}>First</button>\n\n      <button onClick={screen2.enter}>Second</button>\n\n      <FullScreen handle={screen1}>\n        <div className=\"full-screenable-node\" style={{ background: \"red\" }}>\n          First\n          <button onClick={screen2.enter}>Switch</button>\n          <button onClick={screen1.exit}>Exit</button>\n        </div>\n      </FullScreen>\n\n      <FullScreen handle={screen2}>\n        <div className=\"full-screenable-node\" style={{ background: \"green\" }}>\n          Second\n          <button onClick={screen1.enter}>Switch</button>\n          <button onClick={screen2.exit}>Exit</button>\n        </div>\n      </FullScreen>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAuB,OAAO;AAE1C,OAAO,WAAW;AAGlB,SAASC,UAAU,EAAEC,mBAAmB,QAAQ,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AA2BpE,SAASC,GAAGA,CAAC,CAAC,CAAC,EAAE;EAAAC,EAAA;EACf,MAAMC,OAAO,GAAGL,mBAAmB,CAAC,CAAC;EACrC,MAAMM,OAAO,GAAGN,mBAAmB,CAAC,CAAC;EAErC,oBACEE,OAAA;IAAAK,QAAA,gBACEL,OAAA;MAAQM,OAAO,EAAEH,OAAO,CAACI,KAAM;MAAAF,QAAA,EAAC;IAAK;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE9CX,OAAA;MAAQM,OAAO,EAAEF,OAAO,CAACG,KAAM;MAAAF,QAAA,EAAC;IAAM;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE/CX,OAAA,CAACH,UAAU;MAACe,MAAM,EAAET,OAAQ;MAAAE,QAAA,eAC1BL,OAAA;QAAKa,SAAS,EAAC,sBAAsB;QAACC,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAM,CAAE;QAAAV,QAAA,GAAC,OAElE,eAAAL,OAAA;UAAQM,OAAO,EAAEF,OAAO,CAACG,KAAM;UAAAF,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/CX,OAAA;UAAQM,OAAO,EAAEH,OAAO,CAACa,IAAK;UAAAX,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC,eAEbX,OAAA,CAACH,UAAU;MAACe,MAAM,EAAER,OAAQ;MAAAC,QAAA,eAC1BL,OAAA;QAAKa,SAAS,EAAC,sBAAsB;QAACC,KAAK,EAAE;UAAEC,UAAU,EAAE;QAAQ,CAAE;QAAAV,QAAA,GAAC,QAEpE,eAAAL,OAAA;UAAQM,OAAO,EAAEH,OAAO,CAACI,KAAM;UAAAF,QAAA,EAAC;QAAM;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAC/CX,OAAA;UAAQM,OAAO,EAAEF,OAAO,CAACY,IAAK;UAAAX,QAAA,EAAC;QAAI;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACV,CAAC;AAEV;AAACT,EAAA,CA3BQD,GAAG;EAAA,QACMH,mBAAmB,EACnBA,mBAAmB;AAAA;AAAAmB,EAAA,GAF5BhB,GAAG;AA6BZ,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}