{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport useSWR from \"swr\";\nimport { productApi } from \"../api/product\";\nexport function useProduct({\n  params,\n  options\n}) {\n  _s();\n  const {\n    data,\n    error,\n    mutate,\n    isLoading,\n    isValidating\n  } = useSWR([\"/product\", params], () => productApi.getAll(params), {\n    keepPreviousData: true,\n    ...options\n  });\n  return {\n    data,\n    error,\n    isValidating,\n    mutate,\n    isLoading\n  };\n}\n_s(useProduct, \"Bap5VTtO8iRyiMOAZ6vS5vObcls=\", false, function () {\n  return [useSWR];\n});\nexport function useSearchProduct({\n  params,\n  options\n}) {\n  _s2();\n  const {\n    data,\n    error,\n    mutate,\n    isLoading,\n    isValidating\n  } = useSWR([\"/search-product\", params], () => productApi.getBySearchValue(params), {\n    keepPreviousData: true,\n    ...options\n  });\n  return {\n    data,\n    error,\n    isValidating,\n    mutate,\n    isLoading\n  };\n}\n_s2(useSearchProduct, \"Bap5VTtO8iRyiMOAZ6vS5vObcls=\", false, function () {\n  return [useSWR];\n});","map":{"version":3,"names":["useSWR","productApi","useProduct","params","options","_s","data","error","mutate","isLoading","isValidating","getAll","keepPreviousData","useSearchProduct","_s2","getBySearchValue"],"sources":["/Users/trungtran/Documents/GitHub/portfolio/src/hook/useProduct.ts"],"sourcesContent":["import useSWR, { SWRConfiguration } from \"swr\";\nimport { productApi } from \"../api/product\";\nimport { Params } from \"../types/base\";\n\ntype UseProductProps = {\n  params?: Partial<Params>;\n  options?: SWRConfiguration;\n};\nexport function useProduct({ params, options }: UseProductProps) {\n  const { data, error, mutate, isLoading, isValidating } = useSWR(\n    [\"/product\", params],\n    () => productApi.getAll(params!),\n    {\n      keepPreviousData: true,\n      ...options,\n    }\n  );\n\n  return {\n    data,\n    error,\n    isValidating,\n    mutate,\n    isLoading,\n  };\n}\n\nexport function useSearchProduct({ params, options }: UseProductProps) {\n  const { data, error, mutate, isLoading, isValidating } = useSWR(\n    [\"/search-product\", params],\n    () => productApi.getBySearchValue(params!),\n    {\n      keepPreviousData: true,\n      ...options,\n    }\n  );\n\n  return {\n    data,\n    error,\n    isValidating,\n    mutate,\n    isLoading,\n  };\n}\n"],"mappings":";;AAAA,OAAOA,MAAM,MAA4B,KAAK;AAC9C,SAASC,UAAU,QAAQ,gBAAgB;AAO3C,OAAO,SAASC,UAAUA,CAAC;EAAEC,MAAM;EAAEC;AAAyB,CAAC,EAAE;EAAAC,EAAA;EAC/D,MAAM;IAAEC,IAAI;IAAEC,KAAK;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGV,MAAM,CAC7D,CAAC,UAAU,EAAEG,MAAM,CAAC,EACpB,MAAMF,UAAU,CAACU,MAAM,CAACR,MAAO,CAAC,EAChC;IACES,gBAAgB,EAAE,IAAI;IACtB,GAAGR;EACL,CACF,CAAC;EAED,OAAO;IACLE,IAAI;IACJC,KAAK;IACLG,YAAY;IACZF,MAAM;IACNC;EACF,CAAC;AACH;AAACJ,EAAA,CAjBeH,UAAU;EAAA,QACiCF,MAAM;AAAA;AAkBjE,OAAO,SAASa,gBAAgBA,CAAC;EAAEV,MAAM;EAAEC;AAAyB,CAAC,EAAE;EAAAU,GAAA;EACrE,MAAM;IAAER,IAAI;IAAEC,KAAK;IAAEC,MAAM;IAAEC,SAAS;IAAEC;EAAa,CAAC,GAAGV,MAAM,CAC7D,CAAC,iBAAiB,EAAEG,MAAM,CAAC,EAC3B,MAAMF,UAAU,CAACc,gBAAgB,CAACZ,MAAO,CAAC,EAC1C;IACES,gBAAgB,EAAE,IAAI;IACtB,GAAGR;EACL,CACF,CAAC;EAED,OAAO;IACLE,IAAI;IACJC,KAAK;IACLG,YAAY;IACZF,MAAM;IACNC;EACF,CAAC;AACH;AAACK,GAAA,CAjBeD,gBAAgB;EAAA,QAC2Bb,MAAM;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}